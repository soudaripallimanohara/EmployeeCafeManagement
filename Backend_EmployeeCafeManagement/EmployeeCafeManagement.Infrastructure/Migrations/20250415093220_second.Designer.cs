// <auto-generated />
using System;
using EmployeeCafeManagement.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeCafeManagement.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250415093220_second")]
    partial class second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeCafeManagement.Domain.Entities.Cafe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cafes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ab5321e-9d86-401f-a21b-16421fffc058"),
                            Description = "A Lush Creamy Lussy drink with Chilled Flavour.",
                            Location = "Mumbai",
                            Logo = "https://example.com/logos/sunset-brew.png",
                            Name = "Limca"
                        },
                        new
                        {
                            Id = new Guid("4ab1234f-9d86-401f-a21b-16421fffc058"),
                            Description = "A Lush Creamy Lussy drink with Chilled Flavour.",
                            Location = "Bangalore",
                            Logo = "https://example.com/logos/sunset-brew.png",
                            Name = "Maaza"
                        });
                });

            modelBuilder.Entity("EmployeeCafeManagement.Domain.Entities.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = "ECMABC1111",
                            EmailAddress = "ramesh@gmail.com",
                            Gender = "Male",
                            Name = "Ramesh",
                            PhoneNumber = "12345678"
                        },
                        new
                        {
                            Id = "ECMABC2222",
                            EmailAddress = "sures@gmail.com",
                            Gender = "Male",
                            Name = "Suresh",
                            PhoneNumber = "12345678"
                        },
                        new
                        {
                            Id = "ECMABC3333",
                            EmailAddress = "bavesh@gmail.com",
                            Gender = "Male",
                            Name = "Bavesh",
                            PhoneNumber = "12345678"
                        });
                });

            modelBuilder.Entity("EmployeeCafeManagement.Domain.Entities.EmployeeCafe", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CafeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId");

                    b.HasIndex("CafeId");

                    b.ToTable("EmployeesCafe");

                    b.HasData(
                        new
                        {
                            EmployeeId = "ECMABC1111",
                            CafeId = new Guid("0ab5321e-9d86-401f-a21b-16421fffc058"),
                            StartDate = new DateTime(2025, 12, 14, 17, 9, 53, 456, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeId = "ECMABC2222",
                            CafeId = new Guid("0ab5321e-9d86-401f-a21b-16421fffc058"),
                            StartDate = new DateTime(2025, 12, 14, 17, 9, 53, 456, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeId = "ECMABC3333",
                            CafeId = new Guid("0ab5321e-9d86-401f-a21b-16421fffc058"),
                            StartDate = new DateTime(2025, 12, 14, 17, 9, 53, 456, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EmployeeCafeManagement.Domain.Entities.EmployeeCafe", b =>
                {
                    b.HasOne("EmployeeCafeManagement.Domain.Entities.Cafe", "Cafe")
                        .WithMany("EmployeeCafes")
                        .HasForeignKey("CafeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeCafeManagement.Domain.Entities.Employee", "Employee")
                        .WithOne("EmployeeCafe")
                        .HasForeignKey("EmployeeCafeManagement.Domain.Entities.EmployeeCafe", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cafe");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeCafeManagement.Domain.Entities.Cafe", b =>
                {
                    b.Navigation("EmployeeCafes");
                });

            modelBuilder.Entity("EmployeeCafeManagement.Domain.Entities.Employee", b =>
                {
                    b.Navigation("EmployeeCafe")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
